package robLip6.core.tcp;
import java.util.*;
import java.net.*;
import java.io.*;

/*
 * Classe qui reçoit les données des capteurs de la LOW LEVEL
 */
public class Receiver extends Thread
{
	private Vector<Capteur> m_capteurs;
	private InputStream m_input;
	private BufferedReader m_in;
	private DataOutputStream m_out;
	private Socket m_client;
	private Integer m_tailleTrame;
	
	public Receiver(ServerSocket serv) throws IOException
	{
		this.m_client = serv.accept();
		this.m_input = this.m_client.getInputStream();
		this.m_in = new BufferedReader(new InputStreamReader(this.m_input));
		this.m_out = new DataOutputStream(this.m_client.getOutputStream());
		this.initialiseCapteurs();
	}
	
	/*
	 * 1) Envoie une reponse TCP et reçoit en retour une requête contenant le nombre de
	 *  capteurs à gérer
	 * 3) Initialise les buffers de ces capteurs via la classe capteur
	 */
	public void initialiseCapteurs() throws IOException
	{
		this.m_out.write("ok".getBytes());
		while(this.m_input.available() == 4);
		// on lit le nombre de capteurs à gérer
		Integer nbCapteurs = Integer.parseInt(this.m_in.readLine()); 
		for(Integer i=0 ; i < nbCapteurs ; i++)
		{
			this.m_out.write("ok".getBytes());// on dit au client qu'il peut passer à la requête suivante
			while(this.m_input.available() == 4);
			// on lit le nombre d'entiers nécessaires pour les données de ce capteur
			Integer nbByteCapt = Integer.parseInt(this.m_in.readLine()); 
			Capteur capt = new Capteur(nbByteCapt);
			this.m_capteurs.addElement(capt);
		}
	}
	
	public Capteur getCapteur(Integer i)
	{
		return this.m_capteurs.elementAt(i);
	}
	
	@Override
	public void run(){
		while(true)
		{
			try
			{
				if(this.m_input.available() > 0)
				{
					this.traiterTrame(this.m_in.readLine());
				}
			}catch(IOException e)
			{
				System.err.println(e.getMessage());
				System.exit(-1);
			}
		}

	}
	
	private void traiterTrame(String trame)
	{
		String buffer= "";
		Integer numeroCapteur, valeurCapteur;
		for(Integer i=0 ; i < trame.length() ; i++)
		{
			if(trame.getBytes()[i] =='C')
			{
				if(!buffer.isEmpty())
				{
					numeroCapteur = Integer.parseInt(buffer);
					buffer = "";
				}
			}else if(trame.getBytes()[i]==':')
			{
				if(!buffer.isEmpty())
				{
					valeurCapteur = Integer.parseInt(buffer);
					buffer = "";
				}
			}else
			{
				buffer += trame.getBytes()[i];
			}
		}
	}
}
