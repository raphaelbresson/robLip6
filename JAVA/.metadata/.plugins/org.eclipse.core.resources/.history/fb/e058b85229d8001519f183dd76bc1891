package robLip6.core.tcp;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.util.*;
import java.net.*;

import robLip6.core.element.Capteur;

import java.io.*;

public class TcpServer 
{
	private Receiver m_recv;
	private Sender m_send;
	private ServerSocket m_serv;
	public TcpServer()
	{
		
	}
	
	public void init()
	{
		Socket client = this.m_serv.accept();
		InputStream input = client.getInputStream();
		BufferedReader in = new BufferedReader(new InputStreamReader(input));
		DataOutputStream out = new DataOutputStream(client.getOutputStream());
		this.m_recv = new Receiver(in);
		this.m_send = new Sender(out);
	}
	
	public void initConnection(InputStream input,BufferedReader in, DataOutputStream out) throws IOException
	{
		Vector<Capteur> capteurs = new Vector<Capteur>();
		Vector<Actionneur> actionneurs = new Vector<Actionneur>();
		out.write("ok".getBytes());
		while(input.available() >= 4);
		// on lit le nombre de capteurs à gérer
		Integer nbCapteurs = Integer.parseInt(in.readLine()); 
		for(Integer i=0 ; i < nbCapteurs ; i++)
		{
			out.write("ok".getBytes());// on dit au client qu'il peut passer à la requête suivante
			while(input.available() >= 4);
			// on lit le nombre d'entiers nécessaires pour les données de ce capteur
			Integer nbByteCapt = Integer.parseInt(in.readLine()); 
			Capteur capt = new Capteur(nbByteCapt);
			capteurs.addElement(capt);
		}
	}
}
