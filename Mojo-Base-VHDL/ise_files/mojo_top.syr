Release 14.7 - xst P.20131013 (lin)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.08 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.08 secs
 
--> 
Reading design: mojo_top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "mojo_top.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "mojo_top"
Output Format                      : NGC
Target Device                      : xc6slx9-2-tqg144

---- Source Options
Top Module Name                    : mojo_top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 16
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/spi_slave.vhd" into library work
Parsing entity <spi_slave>.
Parsing architecture <RTL> of entity <spi_slave>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_tx.vhd" into library work
Parsing entity <serial_tx>.
Parsing architecture <RTL> of entity <serial_tx>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_rx.vhd" into library work
Parsing entity <serial_rx>.
Parsing architecture <RTL> of entity <serial_rx>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/cclk_detector.vhd" into library work
Parsing entity <cclk_detector>.
Parsing architecture <RTL> of entity <cclk_detector>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/avr_interface.vhd" into library work
Parsing entity <avr_interface>.
Parsing architecture <RTL> of entity <avr_interface>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/ise_files/Analog_in.vhd" into library work
Parsing entity <Analog_in>.
Parsing architecture <Behavioral> of entity <analog_in>.
Parsing VHDL file "/home/raphael/Desktop/HARDWARE/vhdl/PWM/pwm_mgr.vhd" into library work
Parsing entity <pwm_mgr>.
Parsing architecture <Behavioral> of entity <pwm_mgr>.
Parsing VHDL file "/home/raphael/Desktop/Mojo-Base-VHDL/src/mojo_top.vhd" into library work
Parsing entity <mojo_top>.
Parsing architecture <RTL> of entity <mojo_top>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <mojo_top> (architecture <RTL>) from library <work>.

Elaborating entity <Analog_in> (architecture <Behavioral>) from library <work>.

Elaborating entity <pwm_mgr> (architecture <Behavioral>) with generics from library <work>.
WARNING:HDLCompiler:92 - "/home/raphael/Desktop/HARDWARE/vhdl/PWM/pwm_mgr.vhd" Line 68: rst should be on the sensitivity list of the process

Elaborating entity <avr_interface> (architecture <RTL>) from library <work>.

Elaborating entity <cclk_detector> (architecture <RTL>) from library <work>.

Elaborating entity <spi_slave> (architecture <RTL>) from library <work>.

Elaborating entity <serial_rx> (architecture <RTL>) with generics from library <work>.
INFO:HDLCompiler:679 - "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_rx.vhd" Line 80. Case statement is complete. others clause is never selected

Elaborating entity <serial_tx> (architecture <RTL>) with generics from library <work>.
INFO:HDLCompiler:679 - "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_tx.vhd" Line 96. Case statement is complete. others clause is never selected

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/mojo_top.vhd".
INFO:Xst:3210 - "/home/raphael/Desktop/Mojo-Base-VHDL/src/mojo_top.vhd" line 99: Output port <rx_data> of the instance <avr_interface> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/raphael/Desktop/Mojo-Base-VHDL/src/mojo_top.vhd" line 99: Output port <tx_busy> of the instance <avr_interface> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/raphael/Desktop/Mojo-Base-VHDL/src/mojo_top.vhd" line 99: Output port <new_rx_data> of the instance <avr_interface> is unconnected or connected to loadless signal.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:1>> (without init value) have a constant value of 0 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:1>> (without init value) have a constant value of 1 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:1>> (without init value) have a constant value of 0 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:1>> (without init value) have a constant value of 1 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:1>> (without init value) have a constant value of 0 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <tx_data<1:3>> (without init value) have a constant value of 1 in block <mojo_top>.
    WARNING:Xst:2404 -  FFs/Latches <new_tx_data<0:0>> (without init value) have a constant value of 1 in block <mojo_top>.
    Summary:
	no macro.
Unit <mojo_top> synthesized.

Synthesizing Unit <Analog_in>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/ise_files/Analog_in.vhd".
    Found 10-bit register for signal <samples_q<0>>.
    Found 10-bit register for signal <samples_q<1>>.
    Found 10-bit register for signal <samples_q<2>>.
    Found 10-bit register for signal <samples_q<3>>.
    Found 10-bit register for signal <samples_q<4>>.
    Found 10-bit register for signal <samples_q<5>>.
    Found 10-bit register for signal <samples_q<6>>.
    Found 10-bit register for signal <samples_q<7>>.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<5><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<6><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<7><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <current_channel<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <current_channel<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <current_channel<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <current_channel<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <samples_d<0><9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  80 D-type flip-flop(s).
	inferred  84 Latch(s).
Unit <Analog_in> synthesized.

Synthesizing Unit <pwm_mgr>.
    Related source file is "/home/raphael/Desktop/HARDWARE/vhdl/PWM/pwm_mgr.vhd".
        com_length = 10
        cmp_length = 20
        offset = 165
    Found 1-bit register for signal <pwm_q>.
    Found 20-bit register for signal <cmp_q>.
    Found 20-bit adder for signal <cmp_q[19]_GND_90_o_add_0_OUT> created at line 1241.
    Found 11-bit adder for signal <GND_90_o_GND_90_o_add_1_OUT> created at line 1241.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <pwm_d>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <cmp_d<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 13-bit comparator greater for signal <cmp_q[19]_GND_90_o_LessThan_3_o> created at line 55
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  21 D-type flip-flop(s).
	inferred  21 Latch(s).
	inferred   1 Comparator(s).
Unit <pwm_mgr> synthesized.

Synthesizing Unit <avr_interface>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/avr_interface.vhd".
    Found 10-bit register for signal <sample_q>.
    Found 1-bit register for signal <new_sample_q>.
    Found 1-bit register for signal <byte_ct_q>.
    Found 4-bit register for signal <sample_channel_q>.
    Found 1-bit tristate buffer for signal <spi_miso> created at line 125
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 125
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 125
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 125
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 125
    Found 1-bit tristate buffer for signal <tx> created at line 125
    Summary:
	inferred  16 D-type flip-flop(s).
	inferred   2 Multiplexer(s).
	inferred   6 Tristate(s).
Unit <avr_interface> synthesized.

Synthesizing Unit <cclk_detector>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/cclk_detector.vhd".
    Found 13-bit register for signal <ctr_q>.
    Found 1-bit register for signal <ready_q>.
    Found 13-bit adder for signal <ctr_q[12]_GND_113_o_add_1_OUT> created at line 1241.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  14 D-type flip-flop(s).
	inferred   2 Multiplexer(s).
Unit <cclk_detector> synthesized.

Synthesizing Unit <spi_slave>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/spi_slave.vhd".
    Found 1-bit register for signal <miso_q>.
    Found 3-bit register for signal <bit_ct_q>.
    Found 8-bit register for signal <dout_q>.
    Found 1-bit register for signal <done_q>.
    Found 1-bit register for signal <sck_q>.
    Found 1-bit register for signal <mosi_q>.
    Found 1-bit register for signal <ss_q>.
    Found 8-bit register for signal <data_q>.
    Found 1-bit register for signal <sck_old_q>.
    Found 3-bit adder for signal <bit_ct_q[2]_GND_114_o_add_1_OUT> created at line 1241.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  25 D-type flip-flop(s).
	inferred   4 Multiplexer(s).
Unit <spi_slave> synthesized.

Synthesizing Unit <serial_rx>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_rx.vhd".
        CLK_PER_BIT = 100
        CTR_SIZE = 7
    Found 3-bit register for signal <bit_ctr_q>.
    Found 2-bit register for signal <state_q>.
    Found 7-bit register for signal <ctr_q>.
    Found 1-bit register for signal <new_data_q>.
    Found 1-bit register for signal <rx_q>.
    Found 8-bit register for signal <data_q>.
    Found finite state machine <FSM_0> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 9                                              |
    | Inputs             | 4                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | idle                                           |
    | Power Up State     | idle                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 7-bit adder for signal <ctr_q[6]_GND_116_o_add_6_OUT> created at line 1241.
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_116_o_add_8_OUT> created at line 1241.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  20 D-type flip-flop(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_rx> synthesized.

Synthesizing Unit <serial_tx>.
    Related source file is "/home/raphael/Desktop/Mojo-Base-VHDL/src/serial_tx.vhd".
        CLK_PER_BIT = 100
        CTR_SIZE = 7
    Found 1-bit register for signal <tx_q>.
    Found 2-bit register for signal <state_q>.
    Found 1-bit register for signal <block_q>.
    Found 8-bit register for signal <data_q>.
    Found 3-bit register for signal <bit_ctr_q>.
    Found 7-bit register for signal <ctr_q>.
    Found finite state machine <FSM_1> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 10                                             |
    | Inputs             | 4                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | idle                                           |
    | Power Up State     | idle                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_117_o_add_12_OUT> created at line 1241.
    Found 7-bit adder for signal <ctr_q[6]_GND_117_o_add_19_OUT> created at line 1241.
    Found 7-bit 4-to-1 multiplexer for signal <ctr_d> created at line 53.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  20 D-type flip-flop(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_tx> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 22
 11-bit adder                                          : 8
 13-bit adder                                          : 1
 20-bit adder                                          : 8
 3-bit adder                                           : 3
 7-bit adder                                           : 2
# Registers                                            : 49
 1-bit register                                        : 21
 10-bit register                                       : 9
 13-bit register                                       : 1
 20-bit register                                       : 8
 3-bit register                                        : 3
 4-bit register                                        : 1
 7-bit register                                        : 2
 8-bit register                                        : 4
# Latches                                              : 252
 1-bit latch                                           : 252
# Comparators                                          : 8
 13-bit comparator greater                             : 8
# Multiplexers                                         : 22
 1-bit 2-to-1 multiplexer                              : 8
 10-bit 2-to-1 multiplexer                             : 1
 13-bit 2-to-1 multiplexer                             : 1
 3-bit 2-to-1 multiplexer                              : 3
 7-bit 2-to-1 multiplexer                              : 6
 7-bit 4-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 2
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 2

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

WARNING:Xst:1290 - Hierarchical block <serial_rx> is unconnected in block <avr_interface>.
   It will be removed from the design.

Synthesizing (advanced) Unit <cclk_detector>.
The following registers are absorbed into counter <ctr_q>: 1 register on signal <ctr_q>.
Unit <cclk_detector> synthesized (advanced).

Synthesizing (advanced) Unit <serial_rx>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_rx> synthesized (advanced).

Synthesizing (advanced) Unit <serial_tx>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_tx> synthesized (advanced).

Synthesizing (advanced) Unit <spi_slave>.
The following registers are absorbed into counter <bit_ct_q>: 1 register on signal <bit_ct_q>.
Unit <spi_slave> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 18
 11-bit adder                                          : 8
 20-bit adder                                          : 8
 7-bit adder                                           : 2
# Counters                                             : 4
 13-bit up counter                                     : 1
 3-bit up counter                                      : 3
# Registers                                            : 321
 Flip-Flops                                            : 321
# Comparators                                          : 8
 13-bit comparator greater                             : 8
# Multiplexers                                         : 17
 1-bit 2-to-1 multiplexer                              : 7
 10-bit 2-to-1 multiplexer                             : 1
 7-bit 2-to-1 multiplexer                              : 6
 7-bit 4-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 2
# FSMs                                                 : 2

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <avr_interface/serial_tx/FSM_1> on signal <state_q[1:2]> with gray encoding.
-----------------------
 State     | Encoding
-----------------------
 idle      | 00
 start_bit | 01
 data_bits | 11
 stop_bit  | 10
-----------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <avr_interface/serial_rx/FSM_0> on signal <state_q[1:2]> with gray encoding.
-----------------------
 State     | Encoding
-----------------------
 idle      | 00
 wait_half | 01
 wait_full | 11
 wait_high | 10
-----------------------
WARNING:Xst:1710 - FF/Latch <data_q_7> (without init value) has a constant value of 0 in block <serial_tx>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2973 - All outputs of instance <avr_interface/serial_rx> of block <serial_rx> are unconnected in block <mojo_top>. Underlying logic will be removed.

Optimizing unit <mojo_top> ...

Optimizing unit <Analog_in> ...

Optimizing unit <pwm_mgr> ...

Optimizing unit <serial_tx> ...

Optimizing unit <spi_slave> ...

Optimizing unit <serial_rx> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block mojo_top, actual ratio is 14.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 324
 Flip-Flops                                            : 324

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : mojo_top.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 847
#      GND                         : 1
#      INV                         : 19
#      LUT1                        : 152
#      LUT2                        : 36
#      LUT3                        : 35
#      LUT4                        : 140
#      LUT5                        : 37
#      LUT6                        : 44
#      MUXCY                       : 204
#      MUXF7                       : 5
#      VCC                         : 1
#      XORCY                       : 173
# FlipFlops/Latches                : 576
#      FD                          : 10
#      FDC                         : 174
#      FDCE                        : 34
#      FDE                         : 16
#      FDP                         : 2
#      FDR                         : 80
#      FDSE                        : 8
#      LD                          : 4
#      LD_1                        : 168
#      LDE                         : 80
# Clock Buffers                    : 3
#      BUFG                        : 2
#      BUFGP                       : 1
# IO Buffers                       : 20
#      IBUF                        : 6
#      OBUF                        : 8
#      OBUFT                       : 6

Device utilization summary:
---------------------------

Selected Device : 6slx9tqg144-2 


Slice Logic Utilization: 
 Number of Slice Registers:             564  out of  11440     4%  
 Number of Slice LUTs:                  463  out of   5720     8%  
    Number used as Logic:               463  out of   5720     8%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:    728
   Number with an unused Flip Flop:     164  out of    728    22%  
   Number with an unused LUT:           265  out of    728    36%  
   Number of fully used LUT-FF pairs:   299  out of    728    41%  
   Number of unique control sets:        22

IO Utilization: 
 Number of IOs:                          22
 Number of bonded IOBs:                  21  out of    102    20%  
    IOB Flip Flops/Latches:              12

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                3  out of     16    18%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 324   |
avr_interface/new_sample_q         | BUFG                   | 84    |
rst_n                              | IBUF+BUFG              | 168   |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 4.414ns (Maximum Frequency: 226.552MHz)
   Minimum input arrival time before clock: 5.926ns
   Maximum output required time after clock: 6.153ns
   Maximum combinational path delay: 6.045ns

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 4.414ns (frequency: 226.552MHz)
  Total number of paths / destination ports: 789 / 155
-------------------------------------------------------------------------
Delay:               4.414ns (Levels of Logic = 2)
  Source:            avr_interface/cclk_detector/ctr_q_2 (FF)
  Destination:       avr_interface/cclk_detector/ctr_q_12 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: avr_interface/cclk_detector/ctr_q_2 to avr_interface/cclk_detector/ctr_q_12
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             3   0.525   1.196  avr_interface/cclk_detector/ctr_q_2 (avr_interface/cclk_detector/ctr_q_2)
     LUT6:I1->O            1   0.254   0.790  avr_interface/cclk_detector/_n0018_inv1 (avr_interface/cclk_detector/_n0018_inv1)
     LUT4:I2->O           13   0.250   1.097  avr_interface/cclk_detector/_n0018_inv3 (avr_interface/cclk_detector/_n0018_inv)
     FDCE:CE                   0.302          avr_interface/cclk_detector/ctr_q_0
    ----------------------------------------
    Total                      4.414ns (1.331ns logic, 3.083ns route)
                                       (30.2% logic, 69.8% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 416 / 315
-------------------------------------------------------------------------
Offset:              5.926ns (Levels of Logic = 2)
  Source:            rst_n (PAD)
  Destination:       avr_interface/cclk_detector/ctr_q_12 (FF)
  Destination Clock: clk rising

  Data Path: rst_n to avr_interface/cclk_detector/ctr_q_12
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            28   1.328   1.452  rst_n_IBUF (avr_interface/serial_tx/rst_inv)
     INV:I->O            265   0.255   2.432  avr_interface/serial_tx/rst_inv_BUFG_LUT1_INV_0 (avr_interface/serial_tx/rst_inv_BUFG_LUT1)
     FDC:CLR                   0.459          avr_interface/cclk_detector/ready_q
    ----------------------------------------
    Total                      5.926ns (2.042ns logic, 3.884ns route)
                                       (34.5% logic, 65.5% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 16 / 14
-------------------------------------------------------------------------
Offset:              6.153ns (Levels of Logic = 2)
  Source:            avr_interface/cclk_detector/ready_q (FF)
  Destination:       spi_channel<3> (PAD)
  Source Clock:      clk rising

  Data Path: avr_interface/cclk_detector/ready_q to spi_channel<3>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              9   0.525   0.975  avr_interface/cclk_detector/ready_q (avr_interface/cclk_detector/ready_q)
     INV:I->O             30   0.255   1.486  avr_interface/n_rdy1_INV_0 (avr_interface/n_rdy)
     OBUFT:T->O                2.912          spi_channel_3_OBUFT (spi_channel<3>)
    ----------------------------------------
    Total                      6.153ns (3.692ns logic, 2.461ns route)
                                       (60.0% logic, 40.0% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'avr_interface/new_sample_q'
  Total number of paths / destination ports: 4 / 4
-------------------------------------------------------------------------
Offset:              4.174ns (Levels of Logic = 1)
  Source:            analog_inputs/current_channel_3 (LATCH)
  Destination:       spi_channel<3> (PAD)
  Source Clock:      avr_interface/new_sample_q falling

  Data Path: analog_inputs/current_channel_3 to spi_channel<3>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q               1   0.581   0.681  analog_inputs/current_channel_3 (analog_inputs/current_channel_3)
     OBUFT:I->O                2.912          spi_channel_3_OBUFT (spi_channel<3>)
    ----------------------------------------
    Total                      4.174ns (3.493ns logic, 0.681ns route)
                                       (83.7% logic, 16.3% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Delay:               6.045ns (Levels of Logic = 3)
  Source:            spi_ss (PAD)
  Destination:       spi_miso (PAD)

  Data Path: spi_ss to spi_miso
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             3   1.328   0.874  spi_ss_IBUF (spi_ss_IBUF)
     LUT2:I0->O            1   0.250   0.681  avr_interface/ready_spi_miso_en_m_AND_87_o_inv1 (avr_interface/ready_spi_miso_en_m_AND_87_o_inv)
     OBUFT:T->O                2.912          spi_miso_OBUFT (spi_miso)
    ----------------------------------------
    Total                      6.045ns (4.490ns logic, 1.555ns route)
                                       (74.3% logic, 25.7% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock avr_interface/new_sample_q
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    3.433|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk
--------------------------+---------+---------+---------+---------+
                          | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock              |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
--------------------------+---------+---------+---------+---------+
avr_interface/new_sample_q|         |    1.336|         |         |
clk                       |    4.414|         |         |         |
rst_n                     |         |    1.336|         |         |
--------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock rst_n
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    5.811|         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 10.00 secs
Total CPU time to Xst completion: 10.35 secs
 
--> 


Total memory usage is 128636 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :  116 (   0 filtered)
Number of infos    :    3 (   0 filtered)

